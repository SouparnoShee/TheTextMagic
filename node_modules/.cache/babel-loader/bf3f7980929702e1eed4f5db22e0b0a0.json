{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soupa\\\\Desktop\\\\REACT\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\"; // import About from \"./components/About\"\n\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // giving a state for alert message that is null\n  const [Alertmsg, setAlertmsg] = useState(null); // Making a function in which returning the setalertmsg a object,whose values are being provided in different areas\n\n  const showalertmsg = (message, type) => {\n    setAlertmsg({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlertmsg(null);\n    }, 1500);\n  }; // Made a state to set the navbar mode dark or light(As light and dark are used in bootstrap to set color)\n\n\n  const [mode, setmode] = useState(\"light\"); // Made a function to change in dark or light mode when we click\n\n  const togglemodes = () => {\n    if (mode === 'light') {\n      setmode(\"dark\");\n      document.body.style.background = \"#212529\";\n      document.title = \"TTM - Dark mode\"; // This is the function call with the object value of setAlertmsg\n\n      showalertmsg(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setmode(\"light\");\n      document.body.style.background = \"white\";\n      document.title = \"TTM - Light mode\";\n      showalertmsg(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  const redmode = () => {\n    if (mode === 'light') {\n      setmode(\"danger\");\n      document.body.style.background = \"#AA4A44\"; // This is the function call with the object value of setAlertmsg\n\n      showalertmsg(\"Red mode has been enabled\", \"success\");\n    } else {\n      setmode(\"light\");\n      document.body.style.background = \"white\";\n      showalertmsg(\"Red mode has been Disabled\", \"success\");\n    }\n  }; // Here we return only the component which is defined in other place\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TheTextMagic\",\n      mode: mode,\n      Enable: togglemodes,\n      redred: redmode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      Alertmsg: Alertmsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Please fill up the form\",\n        mode: mode,\n        Show: showalertmsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Please fill up the form\",\n        mode: mode,\n        Show: showalertmsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"8eQFR4WgvgiFRdp+aB9c2qKXhnQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextForm","Alert","BrowserRouter","Routes","Route","App","Alertmsg","setAlertmsg","showalertmsg","message","type","msg","setTimeout","mode","setmode","togglemodes","document","body","style","background","title","redmode"],"sources":["C:/Users/soupa/Desktop/REACT/my-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\"\nimport Navbar from \"./components/Navbar\"\nimport TextForm from \"./components/TextForm\"\nimport Alert from \"./components/Alert\"\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  // giving a state for alert message that is null\n  const[Alertmsg,setAlertmsg]=useState(null)\n  // Making a function in which returning the setalertmsg a object,whose values are being provided in different areas\n  const showalertmsg=(message,type)=>{\n    setAlertmsg({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlertmsg(null);\n    }, 1500);\n  }\n  // Made a state to set the navbar mode dark or light(As light and dark are used in bootstrap to set color)\n  const[mode,setmode]=useState(\"light\")\n  // Made a function to change in dark or light mode when we click\n  const togglemodes=()=>{\n    if (mode==='light'){\n      setmode(\"dark\")\n      document.body.style.background=\"#212529\"\n      document.title=\"TTM - Dark mode\"\n      // This is the function call with the object value of setAlertmsg\n      showalertmsg(\"Dark mode has been enabled\",\"success\")\n    }else{\n      setmode(\"light\")\n      document.body.style.background=\"white\"\n      document.title=\"TTM - Light mode\"\n      showalertmsg(\"Light mode has been enabled\",\"success\")\n    }\n  }\n  const redmode=()=>{\n    if (mode==='light'){\n      setmode(\"danger\")\n      document.body.style.background=\"#AA4A44\"\n      // This is the function call with the object value of setAlertmsg\n      showalertmsg(\"Red mode has been enabled\",\"success\")\n    }else{\n      setmode(\"light\")\n      document.body.style.background=\"white\"\n      showalertmsg(\"Red mode has been Disabled\",\"success\")\n    }\n  }\n\n  // Here we return only the component which is defined in other place\n  return (\n    <>\n      {/* Used mode and enable to set props and inside that one is state given above and one is logic(function) in which the state is being changed */}\n      <Navbar title=\"TheTextMagic\" mode={mode} Enable={togglemodes} redred={redmode}/>\n      <Alert Alertmsg={Alertmsg}/>\n      \n      <div className=\"container my-3\">\n        {/* Same mode is used for text form to change the color of texts */}\n        {<TextForm heading=\"Please fill up the form\" mode={mode} Show={showalertmsg}/>}\n        <TextForm heading=\"Please fill up the form\" mode={mode} Show={showalertmsg}/>\n      </div>\n      {/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SACEC,aADF,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;;;;AAMA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAK,CAACC,QAAD,EAAUC,WAAV,IAAuBT,QAAQ,CAAC,IAAD,CAApC,CAFa,CAGb;;EACA,MAAMU,YAAY,GAAC,CAACC,OAAD,EAASC,IAAT,KAAgB;IACjCH,WAAW,CAAC;MACVI,GAAG,EAACF,OADM;MAEVC,IAAI,EAACA;IAFK,CAAD,CAAX;IAIAE,UAAU,CAAC,MAAM;MACfL,WAAW,CAAC,IAAD,CAAX;IACD,CAFS,EAEP,IAFO,CAAV;EAGD,CARD,CAJa,CAab;;;EACA,MAAK,CAACM,IAAD,EAAMC,OAAN,IAAehB,QAAQ,CAAC,OAAD,CAA5B,CAda,CAeb;;EACA,MAAMiB,WAAW,GAAC,MAAI;IACpB,IAAIF,IAAI,KAAG,OAAX,EAAmB;MACjBC,OAAO,CAAC,MAAD,CAAP;MACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAA+B,SAA/B;MACAH,QAAQ,CAACI,KAAT,GAAe,iBAAf,CAHiB,CAIjB;;MACAZ,YAAY,CAAC,4BAAD,EAA8B,SAA9B,CAAZ;IACD,CAND,MAMK;MACHM,OAAO,CAAC,OAAD,CAAP;MACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAA+B,OAA/B;MACAH,QAAQ,CAACI,KAAT,GAAe,kBAAf;MACAZ,YAAY,CAAC,6BAAD,EAA+B,SAA/B,CAAZ;IACD;EACF,CAbD;;EAcA,MAAMa,OAAO,GAAC,MAAI;IAChB,IAAIR,IAAI,KAAG,OAAX,EAAmB;MACjBC,OAAO,CAAC,QAAD,CAAP;MACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAA+B,SAA/B,CAFiB,CAGjB;;MACAX,YAAY,CAAC,2BAAD,EAA6B,SAA7B,CAAZ;IACD,CALD,MAKK;MACHM,OAAO,CAAC,OAAD,CAAP;MACAE,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAA+B,OAA/B;MACAX,YAAY,CAAC,4BAAD,EAA8B,SAA9B,CAAZ;IACD;EACF,CAXD,CA9Ba,CA2Cb;;;EACA,oBACE;IAAA,wBAEE,QAAC,MAAD;MAAQ,KAAK,EAAC,cAAd;MAA6B,IAAI,EAAEK,IAAnC;MAAyC,MAAM,EAAEE,WAAjD;MAA8D,MAAM,EAAEM;IAAtE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,KAAD;MAAO,QAAQ,EAAEf;IAAjB;MAAA;MAAA;MAAA;IAAA,QAHF,eAKE;MAAK,SAAS,EAAC,gBAAf;MAAA,wBAEG,QAAC,QAAD;QAAU,OAAO,EAAC,yBAAlB;QAA4C,IAAI,EAAEO,IAAlD;QAAwD,IAAI,EAAEL;MAA9D;QAAA;QAAA;QAAA;MAAA,QAFH,eAGE,QAAC,QAAD;QAAU,OAAO,EAAC,yBAAlB;QAA4C,IAAI,EAAEK,IAAlD;QAAwD,IAAI,EAAEL;MAA9D;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA,gBADF;AAcD;;GA1DQH,G;;KAAAA,G;AA4DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}